{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Container/Container.js","App.js","index.js"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","handleChange","e","currentTarget","value","className","preventDefault","type","pattern","title","required","onChange","Filter","filter","handleFilter","ContactListItem","contactId","deleteContact","onClick","ContactList","contacts","map","id","Container","children","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","filteredContacts","normalizedFilter","toLowerCase","contact","includes","filterContact","contactData","find","alert","uuidv4","prev","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4be60724.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactForm.scss\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <label>\n        <p className=\"Form__label\">Name:</p>\n        <input\n          className=\"Form__input\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label>\n        <p className=\"Form__label\">Number:</p>\n        <input\n          className=\"Form__input\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className=\"Form__button\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Filter.scss\";\n\nconst Filter = ({ filter, handleFilter }) => {\n  return (\n    <label>\n      <p className=\"Filter__title\">Find contacts by name</p>\n      <input\n        className=\"Filter__input\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactListItem.scss\";\n\nconst ContactListItem = ({ name, number, contactId, deleteContact }) => {\n  return (\n    <li className=\"Item\">\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className=\"Item__button\"\n        type=\"button\"\n        onClick={() => deleteContact(contactId)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"../ContactListItem\";\nimport \"./ContactList.scss\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className=\"ContactList\">\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          contactId={id}\n          name={name}\n          number={number}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Container.scss\";\n\nconst Container = ({ children }) => {\n  return <div className=\"Container\">{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport Container from \"./components/Container\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.scss\";\n\nconst App = () => {\n  const defaultContacts = [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ];\n\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? defaultContacts\n  );\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (contactData) => {\n    if (contacts.find((contact) => contact.name === contactData.name)) {\n      alert(contactData.name + \" is already in contacts\");\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name: contactData.name,\n      number: contactData.number,\n    };\n\n    setContacts((prev) => [contact, ...prev]);\n  };\n\n  const deleteContact = (id) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== id)\n    );\n  };\n\n  const filterContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = filterContact();\n\n  return (\n    <Container>\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter\n        filter={filter}\n        handleFilter={(e) => setFilter(e.currentTarget.value)}\n      />\n      <ContactList contacts={filteredContacts} deleteContact={deleteContact} />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}